prior = prior, pedigree = p2, data = d, nitt = 100000,
burnin = 10000, thin = 100)
d$Age<-as.numeric(as.character(d$Age))
m4 <- MCMCglmm(AdjScore ~ sex + Age + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
m4 <- MCMCglmm(AdjScore ~ sex + context + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
m4 <- MCMCglmm(AdjScore ~ sex + Context + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t"))
d <- as.data.frame(d)
d[is.na(d)] <- NA
str(d)
d$RawScore<-as.numeric(as.character(d$RawScore))
d$AdjScore<-as.numeric(as.character(d$AdjScore))
d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age))
m4 <- MCMCglmm(AdjScore ~ sex + Context + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
summary(m4)
m4 <- MCMCglmm(AdjScore ~ sex + Context + Task + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t"))
d <- as.data.frame(d)
d[is.na(d)] <- NA
str(d)
d$RawScore<-as.numeric(as.character(d$RawScore))
d$AdjScore<-as.numeric(as.character(d$AdjScore))
d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age))
m4 <- MCMCglmm(AdjScore ~ sex + Context + Task + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
summary(m4)
m4 <- MCMCglmm(AdjScore ~ sex + Context + Task + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
str(d)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t"))
d <- as.data.frame(d)
d[is.na(d)] <- NA
str(d)
d$RawScore<-as.numeric(as.character(d$RawScore))
d$AdjScore<-as.numeric(as.character(d$AdjScore))
d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age))
m4 <- MCMCglmm(AdjScore ~ sex + Context + Task + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
summary(m4)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t"))
d <- as.data.frame(d)
d[is.na(d)] <- NA
str(d)
d$RawScore<-as.numeric(as.character(d$RawScore))
d$AdjScore<-as.numeric(as.character(d$AdjScore))
d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age))
m4 <- MCMCglmm(AdjScore ~ sex + Context + Task + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t"))
d <- as.data.frame(d)
d[is.na(d)] <- NA
str(d)
d$RawScore<-as.numeric(as.character(d$RawScore))
d$AdjScore<-as.numeric(as.character(d$AdjScore))
d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age))
m4 <- MCMCglmm(AdjScore ~ sex + Context + Task + 1, random = ~animal, family = "gaussian",
prior = prior, pedigree = p2, data = d, nitt = 10000,
burnin = 1000, thin = 100)
summary(m4)
summary(m3)
dred <- dredge(m2)
library(kinship2) ; library(MCMCglmm) ; library(pedigree) ; library(pedigreemm) ; library(MasterBayes) ; library(rethinking) ; library(MuMIn) ; library(AICcmodavg)
uMCMCglmm<-(updateable(MCMCglmm))
dred <- dredge(m2)
uMCMCglmm<-(updateable(MCMCglmm))
dred <- dredge(m2)
library(kinship2) ; library(MCMCglmm) ; library(pedigree) ; library(pedigreemm) ; library(MasterBayes) ; library(rethinking) ; library(MuMIn) ; library(AICcmodavg)
uMCMCglmm<-(updateable(MCMCglmm))
m2 <- uMCMCglmm(AdjScore ~ sex + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, verbose = FALSE, nitt = 100000, burnin = 10000, thin = 100, pr = T)
#datafile setup and variable correction
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); d <- as.data.frame(d); d[is.na(d)] <- NA;str(d)
d$RawScore<-as.numeric(as.character(d$RawScore)); d$AdjScore<-as.numeric(as.character(d$AdjScore)); d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age)); d$SLBinary<-as.numeric(as.character(d$SLBinary)); d$CurExp<-as.numeric(as.character(d$CurExp)); str(d)
d<-subset(d, !is.na(RawScore))
#pedigree setup
p <- read.csv("kinship2.CSV", header = T, na.strings="NA"); p<- as.data.frame(p); p[is.na(p)] <- NA; str(p)
#p
p2<-orderPed(p);p2[is.na(p2)] <- NA; str(p2)
#p2
# Let's check to make sure all Sires and Dams are in the animal list
a <- p2$animal; b <- p2$dam; c <- p2$sire; e <- d$animal
difs <- setdiff(b,a); length(difs); list(difs); difs <- setdiff(c,a);length(difs); list(difs); difs <- setdiff(e,a);length(difs); list(difs)
#for manual checking use:
#b %in% a; c %in% a; e %in% a; e %in% a; b %in% c; a %in% e
# Priors: We're going to use weakly informative priors here
#For one random effect
prior1 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002)))
#for two random effects use:
prior2 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002)))
#for three random effects use:
prior3 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002), G3=list(V=1, nu=0.002)))
m1 <- uMCMCglmm(AdjScore ~ 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, verbose = FALSE, data = d, nitt = 100000, burnin = 10000, thin = 100, pr = T)
m2 <- uMCMCglmm(AdjScore ~ sex + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, verbose = FALSE, nitt = 100000, burnin = 10000, thin = 100, pr = T)
dred <- dredge(m2)
avg <-model.avg(dred)
summary(avg)
summary(m2)
summary(m1)
m5 <- uMCMCglmm(AdjScore ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100, pr = T)
summary(m5)
dred <- dredge(m5, subset = delta < 4)
summary(avg)
con.models<-list(m1, m2, m3, m4, m5)
con.models.names<-c("Null", "Sex", "Sex + Rearing", "Sex + Rearing + Age", "Sex + Rearing + Age + CurExp")
m.avg.sex<-modavg(cand.set=con.models, modnames=con.models.names, parm="sexM")
m.avg.sex<-mod.avg(cand.set=con.models, modnames=con.models.names, parm="sexM")
summary(m4)
summary(m5)
summary(m3)
summary(m1)
summary(m2)
summary(m5)
herit <- m5$VCV[, "animal"]/(m5$VCV[, "animal"] + m5$VCV[, "units"])
effectiveSize(herit)
mean(herit)
HPDinterval(herit)
herit <- m1$VCV[, "animal"]/(m1$VCV[, "animal"] + m1$VCV[, "units"])
effectiveSize(herit)
mean(herit)
HPDinterval(herit)
herit <- m2$VCV[, "animal"]/(m2$VCV[, "animal"] + m2$VCV[, "units"])
effectiveSize(herit)
mean(herit)
HPDinterval(herit)
m1b <- uMCMCglmm(RawScore ~ 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, verbose = FALSE, data = d, nitt = 100000, burnin = 10000, thin = 100, pr = T)
m2b <- uMCMCglmm(RawScore ~ sex + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, verbose = FALSE, nitt = 100000, burnin = 10000, thin = 100, pr = T)
m3b <- uMCMCglmm(RawScore ~ sex + Rearing + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, burnin = 10000, thin = 100, pr = T)
m4b <- uMCMCglmm(RawScore ~ sex + Rearing + Age + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, burnin = 10000, thin = 100, pr = T)
m5b <- uMCMCglmm(RawScore ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100, pr = T)
summary(m1b)
summary(m2b)
autocorr.diag(m2b$Sol);autocorr.diag(m2b$VCV)
autocorr.diag(m2b$Sol);autocorr.diag(m2b$VCV)
plot(m2b$Sol)
str(d)
autocorr.diag(m1b$Sol) ; autocorr.diag(m1b$VCV)
summary(m1)
autocorr.diag(m1$Sol) ; autocorr.diag(m1$VCV)
m1b <- uMCMCglmm(RawScore ~ 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, verbose = FALSE, data = d, nitt = 100000, burnin = 10000, thin = 100)
summary(m1b)
autocorr.diag(m1b$Sol) ; autocorr.diag(m1b$VCV)
plot(m1b$Sol)
plot(m1b$VCV)
effectiveSize(m1b$Sol) ; effectiveSize(m1b$VCV)
m2b <- uMCMCglmm(RawScore ~ sex + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, verbose = FALSE, nitt = 100000, burnin = 10000, thin = 100)
summary(m2b)
autocorr.diag(m2b$Sol);autocorr.diag(m2b$VCV)
plot(m2b$Sol)
plot(m2b$VCV)
effectiveSize(m2b$Sol) ; effectiveSize(m2b$VCV)
m3b <- uMCMCglmm(RawScore ~ sex + Rearing + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, burnin = 10000, thin = 100)
summary(m3b)
autocorr.diag(m3b$Sol) ; autocorr.diag(m3b$VCV)
plot(m3b$Sol)
effectiveSize(m3b$Sol) ; effectiveSize(m3b$VCV)
m4b <- uMCMCglmm(RawScore ~ sex + Rearing + Age + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, burnin = 10000, thin = 100)
summary(m4b)
autocorr.diag(m4b$Sol) ; autocorr.diag(m4b$VCV)
plot(m4b$Sol)
effectiveSize(m4b$Sol) ; effectiveSize(m4b$VCV)
m5b <- uMCMCglmm(RawScore ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m1b)
autocorr.diag(m1b$Sol) ; autocorr.diag(m1b$VCV)
summary(m2b)
autocorr.diag(m2b$Sol);autocorr.diag(m2b$VCV)
summary(m3b)
autocorr.diag(m3b$Sol) ; autocorr.diag(m3b$VCV)
summary(m3b)
summary(m5b)
autocorr.diag(m5b$Sol) ; autocorr.diag(m5b$VCV)
plot(m5b$Sol)
effectiveSize(m5b$Sol) ; effectiveSize(m5b$VCV)
summary(m5b)
D<-subset(d, TotalExp => 4)
D<-subset(d, TotalExp > 4)
View(D)
m1c <- uMCMCglmm(RawScore ~ 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, verbose = FALSE, data = D, nitt = 100000, burnin = 10000, thin = 100)
summary(m1c)
m2c <- uMCMCglmm(RawScore ~ sex + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, verbose = FALSE, nitt = 100000, burnin = 10000, thin = 100)
m3c <- uMCMCglmm(RawScore ~ sex + Rearing + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, nitt = 100000, burnin = 10000, thin = 100)
m4c <- uMCMCglmm(RawScore ~ sex + Rearing + Age + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, nitt = 100000, burnin = 10000, thin = 100)
m5c <- uMCMCglmm(RawScore ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m1c)
summary(m2c)
summary(m3c)
summary(m4c)
summary(m5c)
D<-subset(d, TotalExp > 3)
m1c <- uMCMCglmm(RawScore ~ 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, verbose = FALSE, data = D, nitt = 100000, burnin = 10000, thin = 100)
summary(m1c)
autocorr.diag(m1c$Sol) ; autocorr.diag(m1c$VCV)
plot(m1c$Sol)
plot(m1c$VCV)
effectiveSize(m1c$Sol) ; effectiveSize(m1c$VCV)
m2c <- uMCMCglmm(RawScore ~ sex + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, verbose = FALSE, nitt = 100000, burnin = 10000, thin = 100)
summary(m2c)
autocorr.diag(m2c$Sol);autocorr.diag(m2c$VCV)
plot(m2c$Sol)
plot(m2c$VCV)
effectiveSize(m2c$Sol) ; effectiveSize(m2c$VCV)
m3c <- uMCMCglmm(RawScore ~ sex + Rearing + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, nitt = 100000, burnin = 10000, thin = 100)
summary(m3c)
autocorr.diag(m3c$Sol) ; autocorr.diag(m3c$VCV)
plot(m3c$Sol)
effectiveSize(m3c$Sol) ; effectiveSize(m3c$VCV)
m4c <- uMCMCglmm(RawScore ~ sex + Rearing + Age + 1, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, nitt = 100000, burnin = 10000, thin = 100)
summary(m4c)
autocorr.diag(m4c$Sol) ; autocorr.diag(m4c$VCV)
plot(m4c$Sol)
effectiveSize(m4c$Sol) ; effectiveSize(m4c$VCV)
m5c <- uMCMCglmm(RawScore ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m1c)
summary(m2c)
summary(m3c)
summary(m4c)
summary(m5c)
m6c <- uMCMCglmm(RawScore ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m5c)
summary(m6c)
log(-0.11)
logistic(-0.11)
logistic(6.09-0.11)
exp(6.09-0.11)
exp(0.11)
exp(0.609)
logistic(0.609)
logistic(0.609-0.11)
summary(m5b)
logistic(.54-.09)
logistic(.54)
summary(m5)
logistic(-0.02)
logistic(-0.02-0.08)
fit <- princomp (d, corr=T)
fit <- princomp(na.omit(d), cor = TRUE)
fit <- princomp(d, cor = TRUE)
fit <- princomp(d, cor = F)
str(d)
dd$Age<-sex(as.character(dd$sex))
dd$sex<-sex(as.character(dd$sex))
str(dd)
dd <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); d <- as.data.frame(d); d[is.na(d)] <- NA;str(d)
dd$RawScore<-as.numeric(as.character(dd$RawScore)); dd$AdjScore<-as.numeric(as.character(dd$AdjScore)); dd$TotalExp<-as.numeric(as.character(dd$TotalExp))
dd$Age<-as.numeric(as.character(dd$Age)); dd$SLBinary<-as.numeric(as.character(dd$SLBinary)); dd$CurExp<-as.numeric(as.character(dd$CurExp)); str(d)
dd$sex<-sex(as.character(dd$sex))
dd$sex<-sex(as.character(dd$sex))
str(dd)
dd <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); d <- as.data.frame(d); d[is.na(d)] <- NA;str(d)
dd <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); dd <- as.data.frame(dd); dd[is.na(dd)] <- NA; str(dd)
dd$RawScore<-as.numeric(as.character(dd$RawScore)); dd$AdjScore<-as.numeric(as.character(dd$AdjScore)); dd$TotalExp<-as.numeric(as.character(dd$TotalExp))
dd$Age<-as.numeric(as.character(dd$Age)); dd$SLBinary<-as.numeric(as.character(dd$SLBinary)); dd$CurExp<-as.numeric(as.character(dd$CurExp)); str(d)
dd$sex<-sex(as.character(dd$sex))
dd$sex<-as.numeric(as.character(dd$sex))
str(dd)
ddd$dd
ddd<-subset(dd, sex, study, Age, Rearing, AdjScore, Context, Task)
summary(m5)
m5 <- uMCMCglmm(AdjScore ~ sex + Rearing + Age + CurExp, random = ~animal + study + sex + Rearing + Age + CurExp, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100, pr = T)
prior6 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002),
G3=list(V=1, nu=0.002, G4=list(V=1, nu=0.002, G5=list(V=1, nu=0.002, G6=list(V=1, nu=0.002))))))
m5 <- uMCMCglmm(AdjScore ~ sex + Rearing + Age + CurExp, random = ~animal + study + sex + Rearing + Age + CurExp, family = "gaussian",
prior = prior6, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100, pr = T)
prior6 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002),
G3=list(V=1, nu=0.002), G4=list(V=1, nu=0.002), G5=list(V=1, nu=0.002), G6=list(V=1, nu=0.002)))))
prior6 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002),
G3=list(V=1, nu=0.002), G4=list(V=1, nu=0.002), G5=list(V=1, nu=0.002), G6=list(V=1, nu=0.002)))))
prior6 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002),
G3=list(V=1, nu=0.002), G4=list(V=1, nu=0.002), G5=list(V=1, nu=0.002), G6=list(V=1, nu=0.002)))
m5 <- uMCMCglmm(AdjScore ~ sex + Rearing + Age + CurExp, random = ~animal + study + sex + Rearing + Age + CurExp, family = "gaussian",
prior = prior6, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100, pr = T)
prior6 <- list(R = list(V=1, nu=0.02), G = list(G1 = list(V=1, nu=0.02), G2 = list(V=1, nu=0.02),
G3=list(V=1, nu=0.02), G4=list(V=1, nu=0.02), G5=list(V=1, nu=0.02), G6=list(V=1, nu=0.02)))
m5 <- uMCMCglmm(AdjScore ~ sex + Rearing + Age + CurExp, random = ~animal + study + sex + Rearing + Age + CurExp, family = "gaussian",
prior = prior6, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
m5 <- uMCMCglmm(AdjScore ~ sex + Rearing + Age + CurExp + study, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m5)
m6 <- uMCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp + study, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m6)
m6 <- uMCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "gaussian",
prior = prior2, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m6)
summary(m5)
summary(m6)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
summary(IC.2)
plot(IC.2)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
IC.2 <-m6$VCV[, 2]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
IC.2 <-m6$VCV[, 3]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
m6 <- MCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp, random = ~animal + CurExp, family = "categorial",
prior = prior, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
library(kinship2) ; library(MCMCglmm) ; library(pedigree) ; library(pedigreemm) ; library(MasterBayes) ; library(rethinking) ; library(MuMIn) ; library(AICcmodavg) ; library(sjstats)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); d <- as.data.frame(d); d[is.na(d)] <- NA;str(d)
d$RawScore<-as.numeric(as.character(d$RawScore)); d$AdjScore<-as.numeric(as.character(d$AdjScore)); d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age)); d$SLBinary<-as.numeric(as.character(d$SLBinary)); d$CurExp<-as.numeric(as.character(d$CurExp)); str(d)
d<-subset(d, !is.na(RawScore))
str(d)
D <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); d <- as.data.frame(d); d[is.na(d)] <- NA;str(d)
d$RawScore<-as.numeric(as.character(d$RawScore)); d$AdjScore<-as.numeric(as.character(d$AdjScore)); d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age)); d$SLBinary<-as.numeric(as.character(d$SLBinary)); d$CurExp<-as.numeric(as.character(d$CurExp)); str(d)
D<-subset(d, TotalExp > 1)
#pedigree setup
p <- read.csv("kinship2.CSV", header = T, na.strings="NA"); p<- as.data.frame(p); p[is.na(p)] <- NA; str(p)
#p
p2<-orderPed(p);p2[is.na(p2)] <- NA; str(p2)
#p2
prior1 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002)))
prior1.5 <- list(R = list(V=2, nu=0.002), G = list(G1 = list(V=1, nu=0.002)))
#for two random effects use:
prior2 <- list(R = list(V=1, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002)))
prior2.5 <- list(R = list(V=2, nu=0.002), G = list(G1 = list(V=1, nu=0.002), G2 = list(V=1, nu=0.002)))
#for three random effects use:
prior6 <- list(R = list(V=1, nu=0.02), G = list(G1 = list(V=1, nu=0.02), G2 = list(V=1, nu=0.02),
G3=list(V=1, nu=0.02), G4=list(V=1, nu=0.02), G5=list(V=1, nu=0.02), G6=list(V=1, nu=0.02)))
m6 <- MCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp, random = ~animal + CurExp, family = "categorial",
prior = prior, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
m6 <- MCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp, random = ~animal + CurExp, family = "categorial",
prior = prior2, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m6)
IC.2 <-m6$VCV[, 3]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
IC.2 <-m6$VCV[, 2]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
m6 <- MCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp, random = ~animal + study, family = "categorial",
prior = prior2, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
icc(d)
m7 <-   lme(SLBinary ~ sex + Rearing + Age +  (1|animal), data = d, grname = "animal", nboot= 10, npermut= 0, adjusted=F)
m7 <-   glmer(SLBinary ~ sex + Rearing + Age +  (1|animal), data = d, grname = "animal", nboot= 10, npermut= 0, adjusted=F)
m7 <- lmer(SLBinary ~ sex + Rearing + Age +  (1|animal), data = d, grname = "animal", nboot= 10, npermut= 0, adjusted=F)
summary(m7)
icc(m7)
m7 <- lmer(SLBinary ~ sex + Rearing + Age +  (1|animal), data = d, family = binomial)
m7 <- glmer(SLBinary ~ sex + Rearing + Age +  (1|animal), data = d, family = binomial)
summary(m7)
print(m7)
icc(m7)
m8 <-   rptGaussian(RawScore ~ sex + Rearing + Age +  (1|animal) + (1|study), data = d, grname = "animal", nboot= 10, npermut= 0, adjusted=F)
m7 <- glmer(SLBinary ~ sex + Rearing + Age +  (1|animal) + (1|study), data = d, family = binomial)
summary(m7)
icc(m7)
m7 <- glmer(SLBinary ~ sex + Rearing + Age +  animal, data = d, family = binomial)
m7 <- glmer(SLBinary ~ sex + Rearing + Age +  animal + (1|study), data = d, family = binomial)
m7 <- glmer(SLBinary ~ sex + Rearing + Age +  (1|animal) + (1|CurExp), data = d, family = binomial)
summary(m7)
icc(m7)
m5.5 <- uMCMCglmm(RawScore ~ sex + Rearing + Age, random = ~animal, family = "gaussian",
prior = prior1.5, pedigree = p2, data = D, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m5.5)
IC.1 <-m5$VCV[, 2]/(rowSums(m5$VCV) + pi^2/3); plot(IC.1); summary(IC.1)
IC.1 <-m5$VCV[, 1]/(rowSums(m5$VCV) + pi^2/3); plot(IC.1); summary(IC.1)
IC.1 <-m5.5$VCV[, 1]/(rowSums(m5.5$VCV) + pi^2/3); plot(IC.1); summary(IC.1)
IC.1 <-m5.5$VCV[, 2]/(rowSums(m5.5$VCV) + pi^2/3); plot(IC.1); summary(IC.1)
IC.1 <-m5.5$VCV[, 3]/(rowSums(m5.5$VCV) + pi^2/3); plot(IC.1); summary(IC.1)
m5.5 <- MCMCglmm(RawScore ~ sex + Rearing + Age, random = ~animal, family = "gaussian",
prior = prior1, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m5.5)
IC.1 <-m5.5$VCV[, 1]/(rowSums(m5.5$VCV) + pi^2/3); plot(IC.1); summary(IC.1)
m6 <- MCMCglmm(SLBinary ~ sex + Rearing + Age + CurExp, random = ~animal, family = "categorial",
prior = prior1, pedigree = p2, data = d, nitt = 100000, verbose = F, burnin = 10000, thin = 100)
summary(m6)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2)
summary(IC.2)
IC.2 <-m6$VCV[, 1]/(rowSums(m6$VCV) + pi^2/3); summary(IC.2); plot(IC.2)
library(kinship2) ; library(MCMCglmm) ; library(pedigree) ; library(pedigreemm) ; library(MasterBayes) ; library(MuMIn) ; library(AICcmodavg) ; library(sjstats); library(coda)
library(gridExtra);library(cowplot);library(ggplot2); library(lattice); library(coefplot2); library(mcmcplots); library(coda); library(mfx); library(spatialprobit); library(MASS); library(boot)
library(lme4);library(arm);library(sjPlot);library(glmulti);library(bblme);library(Rcpp);library(coefplot);library(ggplot2); library(multcomp); library(blmeco)
library(broom); library(tidyr)
d <- as.matrix(read.table("~/Meta-project/MCMC_GLMM.txt", header=TRUE, na.strings="NA", sep = "\t")); d <- as.data.frame(d); d[is.na(d)] <- NA;str(d)
d$RawScore<-as.numeric(as.character(d$RawScore)); d$AdjScore<-as.numeric(as.character(d$AdjScore)); d$TotalExp<-as.numeric(as.character(d$TotalExp))
d$Age<-as.numeric(as.character(d$Age));  d$CurExp<-as.numeric(as.character(d$CurExp)); str(d)
d$ID<- d$animal
#d$SLBinary<-as.numeric(as.character(d$SLBinary))
d$Age.group<- as.numeric(as.character(d$Age.group))
#eliminate NA rows to streamline the dataset
d<-subset(d, !is.na(RawScore)); str(d)
# Let's subset out all of the ghost conditions, which don't have social learning
D<-d; D<-subset(D,!(Context == "Ghost")) ; D$Context<-drop.levels(D$Context) ; str(D)
# And then let's remove individuals with unknown rearing histories
D<-subset(D,!(Rearing == "U")) ; D$Rearing<-drop.levels(D$Rearing) ; str(D)
D$ID<-drop.levels(D$ID) ; str(D)
D$animal<-drop.levels(D$animal) ; str(D)
#drop individuals of age 1
#D<-subset(D,!(Age.group == "1")) ; D$Age.group<-drop.levels(D$Age.group) ; str(D)
#subsetting individuals according to participation. Not sure about this.
#D<-subset(D, TotalExp > 2) ; D$TotalExp<-drop.levels(D$TotalExp) ; str(D)
p <- read.csv("~/Meta-project/kinship2.CSV", header = T, na.strings="NA"); p<- as.data.frame(p); p[is.na(p)] <- NA; str(p)
#This command orders the pedigree file so that sires+dams come first in the list. Necessary for MCMCglmm to read it properly.
p<-orderPed(p);p[is.na(p)] <- NA; str(p)
# Let's check to make sure all Sires and Dams are in the animal list
a <- p$animal; b <- p$dam; c <- p$sire; e <- d$animal
difs <- setdiff(b,a); length(difs); list(difs); difs <- setdiff(c,a);length(difs); list(difs); difs <- setdiff(e,a);length(difs); list(difs)
#for manual checking use:
#b %in% a; c %in% a; e %in% a; e %in% a; b %in% c; a %in% e
#The Priors. Weakly informative.
prior3 <- list(R = list(V=1, nu=0.02), G = list(G1 = list(V=1, nu=0.02), G2 = list(V=1, nu=0.02), G3 = list(V=1, nu=0.02)))
summary(m1); summary(m2); summary(m3); summary(m4)
m1 <- MCMCglmm(RawScore ~ 1, random = ~animal + ID + study2, family = "gaussian",
prior = prior3, pedigree = p, verbose = F, data = D, nitt = 250000, burnin = 10000, thin = 250)
m2 <- MCMCglmm(RawScore ~ 1 + sex + Rearing + Age + CurExp, random = ~animal + ID + study2, family = "gaussian",
prior = prior3, pedigree = p, data = D, nitt = 250000, verbose = F, burnin = 50000, thin = 250)
summary(m1); summary(m2)
m1b <- MCMCglmm(SLBinary ~ 1, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, verbose = F, data = D, nitt = 500000, burnin = 100000, thin = 250)
summary(m1b)
plot(m1b$Sol); plot(m1b$VCV)
autocorr.diag(m1b$Sol) ; autocorr.diag(m1b$VCV) ;
m2b <- MCMCglmm(SLBinary ~ 1 + sex + Rearing + Age + CurExp, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, data = D, nitt = 500000, verbose = T, burnin = 100000, thin = 250)
summary(m2b)
plot(m2b$Sol); plot(m2b$VCV)
m3b<- MCMCglmm(SLBinary ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, data = D, nitt = 10000, verbose = F, burnin = 1000, thin = 100)
summary(m3b)
m3b<- MCMCglmm(SLBinary ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, data = D, nitt = 500000, verbose = F, burnin = 100000, thin = 250)
summary(m3b)
autocorr.diag(m2b$Sol) ; autocorr.diag(m2b$VCV)
plot(m2b$Sol); plot(m2b$VCV)
plot(m3b$Sol); plot(m3b$VCV)
;autocorr.diag(m3b$Sol) ; autocorr.diag(m3b$VCV) ;
autocorr.diag(m3b$Sol) ; autocorr.diag(m3b$VCV) ;
prior3 <- list(R = list(V=1, nu=0.2), G = list(G1 = list(V=1, nu=0.2), G2 = list(V=1, nu=0.2), G3 = list(V=1, nu=0.2)))
m3b<- MCMCglmm(SLBinary ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, data = D, nitt = 500000, verbose = F, burnin = 100000, thin = 250)
summary(m3b)
autocorr.diag(m3b$Sol) ; autocorr.diag(m3b$VCV) ;
plot(m3b$Sol); plot(m3b$VCV)
summary(m3b)
summary(m3)
summary(m1); summary(m2)
herit3 <- m3$VCV[, "animal"]/(m3$VCV[, "animal"] + m3$VCV[, "units"]); effectiveSize(herit3); mean(herit3); HPDinterval(herit3)
rep3 <- m3$VCV[, "ID"]/(m3$VCV[, "ID"] + m3$VCV[, "units"]); effectiveSize(rep3); mean(rep3); HPDinterval(rep3)
summary(m3b)
summary(m1b)
summary(m2)
summary(m2b)
summary(m3b)
m4b<- MCMCglmm(SLBinary ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, data = D, nitt = 500000, verbose = F, burnin = 100000, thin = 250, singular.ok=T)
summary(m4b)
summary(m3b)
summary(m4b)
D<-subset(D,!(Rearing == "U")) ; D$Rearing<-drop.levels(D$Rearing) ; str(D)
m4b<- MCMCglmm(SLBinary ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "categorical",
prior = prior3, pedigree = p, data = D, nitt = 500000, verbose = F, burnin = 100000, thin = 250, singular.ok=T)
summary(m4b)
autocorr.diag(m4b$Sol) ; autocorr.diag(m4b$VCV)
plot(m4b$Sol); plot(m4b$VCV)
plot(m1$Sol); plot(m1$VCV)
plot(m2$Sol); plot(m2$VCV)
plot(m3$Sol); plot(m3$VCV)
m4 <- MCMCglmm(RawScore ~ 1 + sex + Rearing3 + Age + CurExp, random = ~animal + ID + study2, family = "gaussian",
prior = prior3, pedigree = p, data = D, nitt = 250000, verbose = F, burnin = 50000, thin = 250, singular.ok=T)
summary(m1); summary(m2); summary(m3); summary(m4)
#Rearing 2
m3 <- MCMCglmm(RawScore ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "gaussian",
prior = prior3, pedigree = p, data = D, nitt = 250000, verbose = F, burnin = 50000, thin = 250)
summary(m3)
summary(m1); summary(m2); summary(m3); summary(m4)
m3sing <- MCMCglmm(RawScore ~ 1 + sex + Rearing2 + Age + CurExp, random = ~animal + ID + study2, family = "gaussian",
prior = prior3, pedigree = p, data = D, nitt = 250000, verbose = F, burnin = 50000, thin = 250, singular.ok=T)
summary(m3sing)
View(D)
summary(m4)
